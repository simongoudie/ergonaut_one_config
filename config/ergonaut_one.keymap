#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        TB_Backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <5 30>;
            layers = <0>;
        };

        YV_Forwardslash {
            bindings = <&kp SLASH>;
            key-positions = <29 6>;
            layers = <0>;
        };

        TV_Lparens {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 5>;
            layers = <0>;
        };

        YB_RParens {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <6 7>;
            layers = <0>;
        };

        RT_LBrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <28 29>;
            layers = <0>;
        };

        YU_RBrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
            layers = <0>;
        };

        FG_LBrack {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 17>;
            layers = <0>;
        };

        HJ_RBrack {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
            layers = <0>;
        };

        JK_BCKSP {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20>;
            layers = <0>;
        };

        KL_DEL {
            bindings = <&kp DELETE>;
            key-positions = <20 21>;
            layers = <0>;
        };

        P_BCKSP_DEL {
            bindings = <&kp DELETE>;
            key-positions = <10 11>;
            layers = <0>;
        };

        GH_Dash {
            bindings = <&kp MINUS>;
            key-positions = <17 18>;
            layers = <0>;
        };

        VB_Under {
            bindings = <&kp UNDERSCORE>;
            key-positions = <29 30>;
            layers = <0>;
        };

        TY_Equals {
            bindings = <&kp EQUAL>;
            key-positions = <5 6>;
            layers = <0>;
        };

        TV_Lpoint {
            bindings = <&kp LESS_THAN>;
            key-positions = <5 29>;
            layers = <0>;
        };

        YB_Rpoint {
            bindings = <&kp GREATER_THAN>;
            key-positions = <6 30>;
            layers = <0>;
        };

        Num1 {
            bindings = <&kp NUMBER_1>;
            key-positions = <1 13>;
            layers = <0>;
        };

        Num2 {
            bindings = <&kp NUMBER_2>;
            key-positions = <2 14>;
            layers = <0>;
        };

        Num3 {
            bindings = <&kp NUMBER_3>;
            key-positions = <3 15>;
            layers = <0>;
        };

        Num4 {
            bindings = <&kp NUMBER_4>;
            key-positions = <4 16>;
            layers = <0>;
        };

        Num5 {
            bindings = <&kp N5>;
            key-positions = <5 17>;
            layers = <0>;
        };

        Num6 {
            bindings = <&kp NUMBER_6>;
            key-positions = <6 18>;
            layers = <0>;
        };

        Num7 {
            bindings = <&kp N7>;
            key-positions = <7 19>;
            layers = <0>;
        };

        Num8 {
            bindings = <&kp N8>;
            key-positions = <8 20>;
            layers = <0>;
        };

        Num9 {
            bindings = <&kp N9>;
            key-positions = <9 21>;
            layers = <0>;
        };

        Num0 {
            bindings = <&kp N0>;
            key-positions = <10 22>;
            layers = <0>;
        };

        Sym_Exc {
            bindings = <&kp EXCLAMATION>;
            key-positions = <13 25>;
            layers = <0>;
        };

        Sym_At {
            bindings = <&kp AT_SIGN>;
            key-positions = <26 14>;
            layers = <0>;
        };

        Sym_Hash {
            bindings = <&kp HASH>;
            key-positions = <15 27>;
            layers = <0>;
        };

        Sym_Dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <16 28>;
            layers = <0>;
        };

        Sym_Perc {
            bindings = <&kp PERCENT>;
            key-positions = <17 29>;
            layers = <0>;
        };

        Sym_Carot {
            bindings = <&kp CARET>;
            key-positions = <18 30>;
            layers = <0>;
        };

        Sym_Amp {
            bindings = <&kp AMPERSAND>;
            key-positions = <19 31>;
            layers = <0>;
        };

        Sym_Ast {
            bindings = <&kp ASTERISK>;
            key-positions = <20 32>;
            layers = <0>;
        };

        Sym_LParens {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <21 33>;
            layers = <0>;
        };

        Sym_RParens {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <22 34>;
            layers = <0>;
        };

        Sym_Dash {
            bindings = <&kp MINUS>;
            key-positions = <23 35>;
            layers = <0>;
        };

        Next_win {
            bindings = <&kp LA(TAB)>;
            key-positions = <3 4>;
            layers = <0>;
        };

        Next_tab {
            bindings = <&kp LC(TAB)>;
            key-positions = <3 2>;
            layers = <0>;
        };
    };

    behaviors {
        TD_Shft_F19: TD_Shft_F19 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHFT_F19";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp F19>;
        };

        TD_L1_L2: TD_L1_L2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_L1_L2";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 2>;
        };

        TD_L2_L1: TD_L2_L1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_L2_L1";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&mo 1>;
        };

        TD_tab_shift: TD_tab_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "TD_TAB_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        TD_layer_tap: TD_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "TD_LAYER_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&TD_layer_tap 2 TAB              &kp Q  &kp W  &kp E         &kp R         &kp T      &kp Y          &kp U      &kp I      &kp O      &kp P       &kp BACKSPACE
&TD_tab_shift LEFT_SHIFT ESCAPE  &kp A  &kp S  &kp D         &kp F         &kp G      &kp H          &kp J      &kp K      &kp L      &kp SEMI    &kp SQT
&TD_tab_shift LEFT_SHIFT DELETE  &kp Z  &kp X  &TD_Shft_F19  &kp C         &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp PERIOD  &kp SLASH
                                               &kp LCTRL     &kp LEFT_ALT  &TD_L1_L2  &lt LWR ENTER  &kp SPACE  &TD_L2_L1
            >;
        };

        lower_layer {
            bindings = <
&mt LGUI F1     &kp F2    &kp F3  &kp F4    &kp F5    &kp F6     &kp F7     &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
&mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &mt RCTRL MINUS
&mt LALT EQUAL  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5     &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &kp RALT
                                  &trans    &trans    &trans     &trans     &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
&mt LGUI KP_NUM  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP  &kp SLCK         &kp CLCK
&mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp C_MUTE    &kp LEFT  &kp UP     &kp RIGHT  &kp INS          &mt RCTRL K_APP
&kp LALT         &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT    &kp C_VOL_DN  &kp END   &kp DOWN   &kp PG_DN  &kp PAUSE_BREAK  &kp RALT
                                             &trans     &trans     &trans        &trans        &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &none         &trans        &trans
            >;
        };
    };
};
